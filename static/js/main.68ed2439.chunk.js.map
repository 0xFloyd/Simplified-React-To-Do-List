{"version":3,"sources":["ToDoItems.js","ToDoList.js","index.js"],"names":["ToDoItems","props","createTasks","bind","key","this","delete","task","onClick","name","className","date","listItems","entries","map","duration","easing","React","Component","ToDoList","formatDate","newDate","split","substring","state","tasks","tooltipOpen","addTask","deleteTask","toggle","e","textInput","value","dateInput","formattedDate","newTask","Date","now","setState","prevState","concat","console","log","preventDefault","filteredItems","filter","item","href","id","Tooltip","isOpen","target","onSubmit","ref","x","placeholder","type","ReactDOM","render","document","getElementById"],"mappings":"+RAgCeA,E,YA5BX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,YAAa,EAAKA,YAAYC,KAAjB,gBAHH,E,oEAMZC,GACHC,KAAKJ,MAAMK,OAAOF,K,kCAGVG,GAAO,IAAD,OACd,OAAO,wBAAIC,QAAS,kBAAM,EAAKF,OAAOC,EAAKH,MAAMA,IAAKG,EAAKH,KAAMG,EAAKE,KAAK,yBAAKC,UAAU,YAAYH,EAAKI,S,+BAI3G,IACIC,EADgBP,KAAKJ,MAAMY,QACDC,IAAIT,KAAKH,aAEvC,OACI,wBAAIQ,UAAU,YACV,kBAAC,IAAD,CAAUK,SAAU,IAAKC,OAAO,YAC3BJ,Q,GAtBGK,IAAMC,W,QC0GfC,E,YAtGX,WAAYlB,GAAQ,IAAD,8BACf,4CAAMA,KAYVmB,WAAa,SAACT,GACV,IAAIU,EAAUV,EAAKW,MAAM,KAGzB,OAFAD,EAAQ,GAAKA,EAAQ,GAAGE,UAAU,GAClCF,EAAUA,EAAQ,GAAK,IAAMA,EAAQ,GAAK,IAAMA,EAAQ,IAbxD,EAAKG,MAAQ,CACTC,MAAO,GACTC,aAAa,GAGf,EAAKC,QAAU,EAAKA,QAAQxB,KAAb,gBACf,EAAKyB,WAAa,EAAKA,WAAWzB,KAAhB,gBAClB,EAAK0B,OAAS,EAAKA,OAAO1B,KAAZ,gBAVC,E,qEAoBX2B,GACJ,GAA6B,KAAzBzB,KAAK0B,UAAUC,OAAgB3B,KAAK4B,UAAUD,MAAO,CACrD,IAAIE,EAAgB7B,KAAKe,WAAWf,KAAK4B,UAAUD,OAE/CG,EAAU,CACV1B,KAAMJ,KAAK0B,UAAUC,MACrB5B,IAAKgC,KAAKC,MACV1B,KAAMuB,GAGV7B,KAAKiC,UAAS,SAACC,GACX,MAAO,CACHd,MAAOc,EAAUd,MAAMe,OAAOL,OAKxC9B,KAAK0B,UAAUC,MAAQ,GACvB3B,KAAK4B,UAAUD,MAAQ,GAGzBS,QAAQC,IAAIrC,KAAKmB,MAAMC,OACvBK,EAAEa,mB,iCAIKvC,GACP,IAAIwC,EAAgBvC,KAAKmB,MAAMC,MAAMoB,QAAO,SAASC,GACjD,OAAQA,EAAK1C,MAAQA,KAGzBC,KAAKiC,SAAU,CACXb,MAAOmB,M,+BAKbvC,KAAKiC,SAAS,CACZZ,aAAcrB,KAAKmB,MAAME,gB,+BAKnB,IAAD,OACL,OACE,yBAAKhB,UAAU,gBACb,yBAAKA,UAAU,UACb,6BACE,qCAAU,0BAAMA,UAAU,cAAcqC,KAAK,IAAIC,GAAG,WAA1C,MACV,kBAACC,EAAA,EAAD,CAAUC,OAAQ7C,KAAKmB,MAAME,YAAayB,OAAO,UAAUtB,OAAQxB,KAAKwB,QACtE,6BACE,uBAAGnB,UAAU,eAAb,kFAA0G,6BAA1G,0FAIN,6BACE,uBAAGA,UAAU,mBAAb,uCAEF,0BAAM0C,SAAU/C,KAAKsB,SACf,2BACEjB,UAAU,gBACV2C,IAAK,SAAAC,GAAC,OAAK,EAAKvB,UAAYuB,GAC5BC,YAAY,eAElB,2BACMC,KAAK,OACL9C,UAAU,YACV2C,IAAK,SAAAC,GACH,EAAKrB,UAAYqB,KAGzB,4BAAQE,KAAK,UAAb,cAGJ,kBAAC,EAAD,CAAW3C,QAASR,KAAKmB,MAAMC,MAAOnB,OAAQD,KAAKuB,aAAe,S,GA/FvDX,IAAMC,WCE7BuC,IAASC,OACL,yBAAKhD,UAAU,aACX,kBAAC,EAAD,OAEJiD,SAASC,eAAe,W","file":"static/js/main.68ed2439.chunk.js","sourcesContent":["import React from \"react\";\nimport FlipMove from \"react-flip-move\";\n\nclass ToDoItems extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.createTasks =this.createTasks.bind(this);\n    }\n    \n    delete(key) {\n        this.props.delete(key);\n    }\n\n    createTasks(task) {\n        return <li onClick={() => this.delete(task.key)} key={task.key}>{task.name}<div className=\"taskDate\">{task.date}</div></li>\n    }\n\n    render() {\n        let toDoListItems = this.props.entries;\n        let listItems = toDoListItems.map(this.createTasks);\n\n        return (\n            <ul className=\"taskList\">\n                <FlipMove duration={250} easing=\"ease-out\">\n                    {listItems}\n                </FlipMove>\n            </ul>\n        );\n    }\n};\n\nexport default ToDoItems;","import React from \"react\";\nimport ToDoItems from \"./ToDoItems\";\nimport \"./index.css\";\nimport { Tooltip } from \"reactstrap\";\n\n\nclass ToDoList extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            tasks: [],\n          tooltipOpen: false\n        };\n\n        this.addTask = this.addTask.bind(this);\n        this.deleteTask = this.deleteTask.bind(this);\n        this.toggle = this.toggle.bind(this);\n    }\n    \n    formatDate = (date) => {\n        let newDate = date.split('-');\n        newDate[0] = newDate[0].substring(2);\n        newDate = newDate[1] + '/' + newDate[2] + '/' + newDate[0];\n        return newDate;\n      };\n\n    addTask(e) {\n        if (this.textInput.value !== \"\" && this.dateInput.value) {\n            let formattedDate = this.formatDate(this.dateInput.value);\n\n            let newTask = {\n                name: this.textInput.value,\n                key: Date.now(),\n                date: formattedDate\n            };\n\n            this.setState((prevState) => {\n                return {\n                    tasks: prevState.tasks.concat(newTask)\n                };\n            \n        });\n           \n          this.textInput.value = '';\n          this.dateInput.value = '';\n        }\n\n        console.log(this.state.tasks);\n        e.preventDefault();\n    }\n  \n\n    deleteTask(key) {\n        let filteredItems = this.state.tasks.filter(function(item) {\n            return (item.key !== key);\n        });\n\n        this.setState( {\n            tasks: filteredItems\n        });\n    }\n  \n    toggle() {\n      this.setState({\n        tooltipOpen: !this.state.tooltipOpen\n      });\n    }\n    \n  \n    render() {\n        return (\n          <div className=\"todoListMain\">\n            <div className=\"header\">\n              <div>\n                <h1>TewDew<span className=\"toolTipMark\" href=\"#\" id=\"toolTip\">?</span></h1>\n                <Tooltip  isOpen={this.state.tooltipOpen} target=\"toolTip\" toggle={this.toggle}>\n                  <div>\n                    <p className=\"toolTipText\">TewDew is the simplest To Do App possible, so you can focus on only one thing. <br></br>Add at task with the \"Add Task\" button, and delete a task by simply clicking on it.</p>\n                  </div>\n                </Tooltip>\n              </div>\n              <div>\n                <p className=\"siteDescription\">Your tasks, focused and simplifed.</p>\n              </div>\n              <form onSubmit={this.addTask}>\n                    <input\n                      className=\"taskTextInput\"\n                      ref={x => (this.textInput = x)}\n                      placeholder=\"Enter task\"\n                ></input>\n                <input\n                      type=\"date\"\n                      className=\"dateInput\"\n                      ref={x => {\n                        this.dateInput = x;\n                      }}\n                ></input>\n                <button type=\"submit\">Add Task</button>\n              </form>\n            </div>\n            <ToDoItems entries={this.state.tasks} delete={this.deleteTask} />{\" \"}\n            {/* ToDoItems has access to two props, entries and delete */}\n          </div>\n        );\n  }\n}\n\n\nexport default ToDoList;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport ToDoList from \"./ToDoList\";\n\n\n\n\nReactDOM.render(\n    <div className=\"container\">\n        <ToDoList/>\n    </div>,\n    document.getElementById('root')\n);"],"sourceRoot":""}